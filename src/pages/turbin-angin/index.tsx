import Head from "next/head";
import { useState } from "react";
import { DownloadButton } from "../../components/button";
import { DownloadModal } from "@/components/modal";

import { Skeleton } from "@mui/material";
import { DatePicker } from "@mui/x-date-pickers";

import { RealTimeCard } from "@/components/cards";
import {
  PowerDailyChart,
  EnergyDailyChart,
  EnergyMonthlyChart,
  EnergyYearlyChart,
} from "@/components/charts";
import { DailyData, MonthlyData, YearlyData } from "@/types/types";

import { useWindFetch } from "@/hooks/wind.hooks";

import axios from "axios";
import { useQuery } from "@tanstack/react-query";
import { SERVER_EBT_URL } from "@/configs/url";
import harian from "@/dummies/angin/harian.json";

import { realTimeCardItems } from "@/utils";

import { format } from "date-fns";

export default function TurbinAngin() {
  const [open, setOpen] = useState(false);

  const [powerDate, setPowerDate] = useState<Date | null>(new Date());
  const [dailyDate, setDailyDate] = useState<Date | null>(new Date());
  const [monthlyDate, setMonthlyDate] = useState<Date | null>(new Date());
  const [yearlyDate, setYearlyDate] = useState<Date | null>(new Date());

  const [realData, dailyData, monthlyData, yearlyData] = useWindFetch(
    dailyDate,
    monthlyDate,
    yearlyDate
  );

  const dailyPower = useQuery({
    queryKey: [
      "dailyData",
      { data: "turbin", waktu: format(powerDate as Date, "yyyy-MM-dd") },
    ],
    queryFn: async () => {
      const res = await axios.get(
        `${SERVER_EBT_URL}/ebt/harian?data=turbin&waktu=${format(
          powerDate as Date,
          "yyyy-MM-dd"
        )}`
      );
      return res.data.value as DailyData[];
    },
    // placeholderData: harian.value,

    // onError: () => snackbarHandler.open(),
  });

  return (
    <>
      <Head>
        <title>Turbin Angin</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/Wind-Turbine.svg" />
      </Head>

      <div className="pb-8">
        <DownloadButton onClick={() => setOpen(true)} />
        <DownloadModal
          modalTitle="Turbin Angin"
          open={open}
          onClose={() => setOpen(false)}
        />

        <section className="mt-4 flex flex-col bg-white shadow-md">
          <div className="mx-9 my-10">
            <div className="flex flex-col gap-2">
              <h3 className="text-2xl font-bold">
                Data <span className="text-[#9747FF]">Terbaru</span>
              </h3>
              {realData.isSuccess ? (
                <p className="italic text-sm">
                  Last updated :{" "}
                  {format(
                    new Date(realData.data[4]?.db_created_at),
                    "dd/MM/yyyy HH:mm:ss"
                  )}{" "}
                  WIB
                </p>
              ) : (
                <></>
              )}
              {/* <p className="italic">Last updated : {}</p> */}
            </div>
            <div className="mt-9 flex flex-row gap-6 justify-center">
              {realData.isLoading && (
                <>
                  <Skeleton variant="rectangular" width={208} height={288} />
                  <Skeleton variant="rectangular" width={208} height={288} />
                  <Skeleton variant="rectangular" width={208} height={288} />
                </>
              )}

              {realData.isSuccess && (
                <>
                  <RealTimeCard
                    value={realData.data[4]?.voltage}
                    unit="Volt"
                    title="Tegangan"
                  />
                  <RealTimeCard
                    value={realData.data[4]?.current}
                    unit="Ampere"
                    title="Arus"
                  />
                  <RealTimeCard
                    value={realData.data[4]?.power}
                    unit="Watt"
                    title="Daya"
                  />
                </>
              )}
            </div>
          </div>
        </section>

        <section
          id="daya-harian"
          className="mt-9 flex flex-col bg-white shadow-md"
        >
          <div className="mx-9 my-10">
            <div className="flex flex-row justify-between">
              <div className="flex flex-col gap-2">
                <h3 className="text-2xl font-bold">
                  Produksi Daya <span className="text-[#9747FF]">Harian</span>
                </h3>
                {/* {dailyData.isSuccess && (
                  <p className="italic text-sm text-[#378ffd]">
                    Last updated :{" "}
                    {format(
                      new Date(
                        dailyData.data[dailyData.data.length - 1].db_created_at
                      ),
                      "dd/MM/yyyy HH:mm:ss"
                    )}{" "}
                    WIB
                  </p>
                )} */}
                {realData.isSuccess && (
                  <p className="italic text-sm ">
                    Last updated :{" "}
                    {format(
                      new Date(realData.data[4]?.db_created_at),
                      "dd/MM/yyyy HH:mm:ss"
                    )}{" "}
                    WIB
                  </p>
                )}
                {/* {latestOutdoor.isSuccess && (
                  <p className="italic text-sm text-[#4ee294]">
                    Last updated :{" "}
                    {format(
                      new Date(latestOutdoor.data.data.lastUpdate),
                      "dd/MM/yyyy HH:mm:ss"
                    )}{" "}
                    WIB
                  </p>
                )} */}
              </div>
              <DatePicker
                label="Masukkan Tanggal"
                value={powerDate}
                views={["year", "month", "day"]}
                defaultValue={new Date()}
                onChange={(newValue) => setPowerDate(newValue)}
                disableFuture
                format="dd/MM/yyyy"
                className="mr-16"
              />
            </div>
            <div className="mt-9 ml-16 mr-2">
              <PowerDailyChart
                // data={dailyPower.data as DailyData[]}
                data={harian.value}
                // outdoorData={outdoorSolarData.data as OutdoorSolarData[]}
                outdoorData={[]}
                dailyDate={powerDate as Date}
              />
              {dailyPower.isSuccess ? (
                <></>
              ) : (
                <Skeleton variant="rectangular" width={1100} height={435} />
              )}
            </div>
          </div>
        </section>

        <section
          id="energi-harian"
          className="mt-9 flex flex-col bg-white shadow-md"
        >
          <div className="mx-9 my-10">
            <div className="flex flex-row justify-between">
              <div className="flex flex-col gap-2">
                <h3 className="text-2xl font-bold">
                  Produksi Energi <span className="text-[#9747FF]">Harian</span>
                </h3>
                {realData.isSuccess && (
                  <p className="italic text-sm">
                    Last updated :{" "}
                    {format(
                      new Date(realData.data[4]?.db_created_at),
                      "dd/MM/yyyy"
                    )}
                  </p>
                )}
              </div>
              <DatePicker
                label="Masukkan Tanggal"
                value={dailyDate}
                views={["year", "month", "day"]}
                defaultValue={new Date()}
                onChange={(newValue) => setDailyDate(newValue)}
                disableFuture
                format="dd/MM/yyyy"
                className="mr-16"
              />
            </div>
            <div className="mt-9 ml-16">
              {dailyData.isSuccess ? (
                <EnergyDailyChart
                  data={dailyData.data as DailyData[]}
                  // outdoorData={[]}
                  // dailyDate={dailyDate}
                />
              ) : (
                <Skeleton variant="rectangular" width={1100} height={435} />
              )}
            </div>
          </div>
        </section>

        <section id="bulanan" className="mt-9 flex flex-col bg-white shadow-md">
          <div className="mx-9 my-10">
            <div className="flex flex-row justify-between">
              <div className="flex flex-col gap-2">
                <h3 className="text-2xl font-bold">
                  Produksi Energi{" "}
                  <span className="text-[#9747FF]">Bulanan</span>
                </h3>
                {realData.isSuccess && (
                  <p className="italic text-sm">
                    Last updated :{" "}
                    {format(
                      new Date(realData.data[4]?.db_created_at),
                      "dd/MM/yyyy"
                    )}
                  </p>
                )}
              </div>
              <DatePicker
                label="Masukkan Bulan"
                value={monthlyDate}
                defaultValue={new Date()}
                onChange={(newValue) => setMonthlyDate(newValue)}
                disableFuture
                openTo="month"
                views={["month", "year"]}
                className="mr-16"
              />
            </div>
            <div className="mt-9 ml-16">
              {monthlyData.isSuccess ? (
                <EnergyMonthlyChart data={monthlyData.data as MonthlyData[]} />
              ) : (
                <Skeleton variant="rectangular" width={1100} height={435} />
              )}
            </div>
          </div>
        </section>

        <section id="tahunan" className="mt-9 flex flex-col bg-white shadow-md">
          <div className="mx-9 my-10">
            <div className="flex flex-row justify-between">
              <div className="flex flex-col gap-2">
                <h3 className="text-2xl font-bold">
                  Produksi Energi{" "}
                  <span className="text-[#9747FF]">Tahunan</span>
                </h3>
                {realData.isSuccess && (
                  <p className="italic text-sm">
                    Last updated :{" "}
                    {format(
                      new Date(realData.data[4]?.db_created_at),
                      "dd/MM/yyyy"
                    )}
                  </p>
                )}
              </div>
              <DatePicker
                label="Masukkan Tahun"
                value={yearlyDate}
                defaultValue={new Date()}
                onChange={(newValue) => setYearlyDate(newValue)}
                disableFuture
                openTo="year"
                views={["year"]}
                className="mr-16"
              />
            </div>
            <div className="mt-9 ml-16">
              {yearlyData.isSuccess ? (
                <EnergyYearlyChart data={yearlyData.data as YearlyData[]} />
              ) : (
                <Skeleton variant="rectangular" width={1100} height={435} />
              )}
            </div>
          </div>
        </section>
        {/* <Skeleton variant="rounded" height={160} className="mt-4 " />
        <Skeleton variant="rounded" height={160} className="mt-4 " /> */}
      </div>
    </>
  );
}
