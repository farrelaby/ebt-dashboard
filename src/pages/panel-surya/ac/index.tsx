import Head from "next/head";
import { useState } from "react";
import { format } from "date-fns";
import { DownloadButton } from "../../../components/button";
import { DownloadModal } from "@/components/modal";

import { Skeleton } from "@mui/material";
import { DatePicker } from "@mui/x-date-pickers";

import { RealTimeCard } from "@/components/cards";
import {
  EnergyDailyChart,
  EnergyMonthlyChart,
  EnergyYearlyChart,
} from "@/components/charts";
import {
  DailyData,
  MonthlyData,
  YearlyData,
  OutdoorSolarData,
} from "@/types/types";

import { useSolarFetch } from "@/hooks/solar.hooks";

export default function PanelSuryaAC() {
  const [open, setOpen] = useState(false);

  const [dailyDate, setDailyDate] = useState<Date | null>(new Date());
  const [monthlyDate, setMonthlyDate] = useState<Date | null>(new Date());
  const [yearlyDate, setYearlyDate] = useState<Date | null>(new Date());

  const [realData, dailyData, monthlyData, yearlyData, outdoorSolarData] =
    useSolarFetch("suryaAC", dailyDate, monthlyDate, yearlyDate);

  type RealTimeCardItem = {
    valueKey: "voltage" | "current" | "power" | "energy" | "power_factor";
    unit: string;
    title: string;
  };

  const realTimeCardItems: RealTimeCardItem[] = [
    {
      valueKey: "voltage",
      unit: "Volt",
      title: "Voltage",
    },
    {
      valueKey: "current",
      unit: "Ampere",
      title: "Arus",
    },
    {
      valueKey: "power",
      unit: "Watt",
      title: "Daya",
    },
    {
      valueKey: "energy",
      unit: "Wh",
      title: "Energi",
    },
    {
      valueKey: "power_factor",
      unit: "",
      title: "Power Factor",
    },
  ];

  // console.log(realData.data, realData.isSuccess);
  return (
    <>
      <Head>
        <title>Panel Surya</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/Solar-Panel.svg" />
      </Head>

      <div className="pb-8">
        <DownloadButton onClick={() => setOpen(true)} />
        <DownloadModal
          modalTitle="Panel Surya AC"
          open={open}
          onClose={() => setOpen(false)}
        />

        <section
          id="realtime"
          className="mt-4 flex flex-col bg-white shadow-md"
        >
          <div className="mx-9 my-10">
            <div className="flex flex-row justify-between">
              <h3 className="text-2xl font-bold">
                <span className="text-[#9747FF]">Real Time</span> Monitoring
              </h3>
              {realData.isSuccess ? (
                <p className="italic text-sm">
                  Last updated :{" "}
                  {format(
                    new Date(realData.data?.db_created_at),
                    "dd/MM/yyyy HH:mm:ss"
                  )}{" "}
                  WIB
                </p>
              ) : (
                <></>
              )}
              {/* <p className="italic">Last updated : {}</p> */}
            </div>
            <div className="mt-9 flex flex-row gap-6 justify-center">
              {realData.isLoading && (
                <>
                  <Skeleton variant="rectangular" width={208} height={288} />
                  <Skeleton variant="rectangular" width={208} height={288} />
                  <Skeleton variant="rectangular" width={208} height={288} />
                  <Skeleton variant="rectangular" width={208} height={288} />
                  <Skeleton variant="rectangular" width={208} height={288} />
                </>
              )}
              {realData.isError && <p>Error...</p>}
              {realData.isSuccess && (
                <>
                  {realTimeCardItems.map((item, index) => (
                    <RealTimeCard
                      key={index}
                      value={realData.data[item.valueKey]}
                      unit={item.unit}
                      title={item.title}
                    />
                  ))}
                </>
              )}
            </div>
          </div>
        </section>

        <section id="harian" className="mt-9 flex flex-col bg-white shadow-md">
          <div className="mx-9 my-10">
            <div className="flex flex-row justify-between">
              <h3 className="text-2xl font-bold">
                Produksi Energi <span className="text-[#9747FF]">Harian</span>
              </h3>
              <DatePicker
                label="Masukkan Tanggal"
                value={dailyDate}
                defaultValue={new Date()}
                onChange={(newValue) => setDailyDate(newValue)}
                disableFuture
                format="dd/MM/yyyy"
                className="mr-16"
              />
            </div>
            <div className="mt-9 ml-16 mr-2">
              {dailyData.isSuccess && outdoorSolarData.isSuccess ? (
                <EnergyDailyChart
                  data={dailyData.data as DailyData[]}
                  outdoorData={outdoorSolarData.data as OutdoorSolarData[]}
                />
              ) : (
                <Skeleton variant="rectangular" width={1100} height={420} />
              )}
            </div>
          </div>
        </section>

        <section id="bulanan" className="mt-9 flex flex-col bg-white shadow-md">
          <div className="mx-9 my-10">
            <div className="flex flex-row justify-between">
              <h3 className="text-2xl font-bold">
                Produksi Energi <span className="text-[#9747FF]">Bulanan</span>
              </h3>
              <DatePicker
                label="Masukkan Bulan"
                value={monthlyDate}
                defaultValue={new Date()}
                onChange={(newValue) => setMonthlyDate(newValue)}
                disableFuture
                openTo="month"
                views={["month", "year"]}
                className="mr-16"
              />
            </div>
            <div className="mt-9 ml-16">
              {monthlyData.isSuccess ? (
                <EnergyMonthlyChart data={monthlyData.data as MonthlyData[]} />
              ) : (
                <Skeleton variant="rectangular" width={1100} height={420} />
              )}
            </div>
          </div>
        </section>

        <section id="tahunan" className="mt-9 flex flex-col bg-white shadow-md">
          <div className="mx-9 my-10">
            <div className="flex flex-row justify-between">
              <h3 className="text-2xl font-bold">
                Produksi Energi <span className="text-[#9747FF]">Tahunan</span>
              </h3>
              <DatePicker
                label="Masukkan Tahun"
                value={yearlyDate}
                defaultValue={new Date()}
                onChange={(newValue) => setYearlyDate(newValue)}
                disableFuture
                openTo="year"
                views={["year"]}
                className="mr-16"
              />
            </div>
            <div className="mt-9 ml-16">
              {yearlyData.isSuccess ? (
                <EnergyYearlyChart data={yearlyData.data as YearlyData[]} />
              ) : (
                <Skeleton variant="rectangular" width={1100} height={420} />
              )}
            </div>
          </div>
        </section>

        {/* <Skeleton variant="rounded" height={160} className="mt-4 " />
        <Skeleton variant="rounded" height={160} className="mt-4 " /> */}
      </div>
    </>
  );
}
